prototype(Jonnitto.TextWithPlyr:Tag) < prototype(Neos.Fusion:Tag) {
    config = ${Configuration.setting('Jonnitto.TextWithPlyr')}
    align = ${q(node).property('alignment') ? q(node).property('alignment') : this.config.defaultAlignment}

    media = false

    prototype(Jonnitto.Plyr:Tag) {
        @process.contentElementWrapping >
    }

    @context {
        config = ${this.config}
        alignment = ${this.align}
        hasRow = ${this.align == 'left' || this.align == 'right' ? true : false}
        media = ${this.media}
    }

    attributes {
        class = Neos.Fusion:RawArray {
            nodeType = ${String.toLowerCase(String.pregReplace(q(node).property('_nodeType.name'), '/[[:^alnum:]]/', '-'))}
            container = ${config.container}
            alignment = ${'-' + String.toLowerCase(alignment)}
            container = ${hasRow ? config.class.hasRow : config.class.hasFloat}
        }
    }

    content = Neos.Fusion:Template {
        templatePath = 'resource://Jonnitto.TextWithPlyr/Private/Fusion/Prototypes/Tag.html'
        @process.row = Neos.Fusion:Tag {
            @if.isLeftOrRight = ${hasRow}
            attributes.class = Neos.Fusion:RawArray {
                row = ${config.class.row}
                alignment = ${config.class.alignment[alignment]}
            }
            content = ${value}
        }

        hasRow = ${hasRow}

        text = Neos.Fusion:Tag {
            @context.property = ${'text'}
            attributes.class = ${hasRow ? config.class.colText : false}
            content = ${q(node).property(property)}
            @process {
                convertUris = Neos.Neos:ConvertUris
                contentElementEditable = Neos.Neos:ContentElementEditable
            }
        }

        media = Neos.Fusion:Tag {
            attributes.class = Neos.Fusion:RawArray {
                container = false
                col = ${hasRow ? config.class.colMedia : false}
                float = ${hasRow ? false : config.class.alignment[alignment]}
            }
            content = ${media}
        }
    }

    @ignoreProperties = ${['config', 'align', 'media']}

    @process.contentElementWrapping {
        expression = Neos.Neos:ContentElementWrapping
        @position = 'end 999999999'
    }

    @exceptionHandler = 'Neos\\Neos\\Fusion\\ExceptionHandlers\\NodeWrappingHandler'
}
